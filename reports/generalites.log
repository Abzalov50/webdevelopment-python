Traceback (most recent call last):
  File "/home/abzalov/.local/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/abzalov/.local/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/abzalov/.local/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/abzalov/.local/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/home/abzalov/.local/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/abzalov/.local/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/abzalov/.local/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import socket


def server_app():
    host = socket.gethostname()  # Obtenir le nom d'hÃ´te de la machine serveur
    port = 8000  # Brancher le serveur Ã  un port supÃ©rieur Ã  1024
    
    serv_socket = socket.socket()  # CrÃ©er un objet `socket'
    serv_socket.bind( (host, port) )  # Associer l'objet au socket
    
    serv_socket.listen(2)  # SpÃ©cifier le nombre de requÃªtes simultanÃ©es que le serveur peut traiter
    conn, address = serv_socket.accept()  # Le serveur est prÃªt Ã  accepter une connexion

    print('####\n\n')
    print('Connexion depuis l\'adresse : {0}'.format(address))
    
    # Lancer la boucle de traitement des requÃªtes
    while True:
        req = conn.recv(1024).decode()  # RequÃªte limitÃ©e Ã  1024 octets
        
        if not req:
            # Si aucune donnÃ©e, arrÃªter le serveur
            break
        print('DonnÃ©es reÃ§ues de l'utilisateur connectÃ© : "{0}"'.format(req))
        data = input(' >> ')
        conn.send(data.encode()) # Envoyer une rÃ©ponse au client
    
    conn.close()  # Fermer la connexion Ã  l'arrÃªt de la boucle de traitement.


#if __name__ == '__main__':
#    server_app()
------------------

[0;36m  Input [0;32mIn [1][0;36m[0m
[0;31m    print('DonnÃ©es reÃ§ues de l'utilisateur connectÃ© : "{0}"'.format(req))[0m
[0m                                                           ^[0m
[0;31mSyntaxError[0m[0;31m:[0m unterminated string literal (detected at line 24)

SyntaxError: unterminated string literal (detected at line 24) (477305930.py, line 24)

